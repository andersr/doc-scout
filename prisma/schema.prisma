generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Project {
  id        Int       @id @default(autoincrement())
  publicId  String    @unique
  name      String
  createdAt DateTime?
  updatedAt DateTime?

  collectionName String?

  sources Source[]
  members ProjectUser[]
  apiKeys Key[]
}

model Key {
  id        String   @id @default(cuid(2))
  secret    String
  createdAt DateTime

  name String?

  project   Project? @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId Int?
}

model ProjectUser {
  id   Int  @id @default(autoincrement())
  role Role @default(USER)

  project   Project? @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId Int?
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?
}

enum Role {
  ADMIN
  USER
}

model Source {
  id        Int       @id @default(autoincrement())
  publicId  String    @unique
  createdAt DateTime?
  updatedAt DateTime?

  name        String?
  url         String?
  storagePath String?

  project   Project? @relation(fields: [projectId], references: [id])
  projectId Int?
}

model User {
  id       Int    @id @default(autoincrement())
  publicId String @unique

  clerkId String @unique

  // role      Role      @default(USER)
  // email     String    @unique
  // name      String?
  // createdAt DateTime?
  // lastLogin DateTime?

  projectMemberships ProjectUser[]
}
